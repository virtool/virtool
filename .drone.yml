kind: pipeline
name: server

steps:
  - name: ping
    image: mongo:3.6
    commands:
      - sleep 5
      - mongo --host mongo --eval "db.version()"

  - name: test
    image: virtool/external-tools:0.1.2
    
    commands:
      - pip install -qr requirements.txt
      - pytest -x --aiohttp-loop uvloop --db-host mongo --cov --cov-report xml
      
  - name: coverage
    image: python:3.6-alpine
    environment:
      CODACY_PROJECT_TOKEN:
        from_secret: CODACY_PROJECT_TOKEN        
    commands:
      - apk add git
      - pip install codacy-coverage
      - python-codacy-coverage -r coverage.xml -c $DRONE_COMMIT_SHA -d $PWD
    when:
      event:
        - push

services:
  - name: mongo
    image: mongo:3.6
    command: [ --smallfiles, --nojournal ]
    ports:
      - 27017

---
kind: pipeline
name: client

steps:
  - name: test
    image: node:10-alpine
    commands:
      - cd client
      - npm i      
      - npx jest --coverage
      
  - name: coverage
    image: node:10-alpine
    environment:
      CODACY_PROJECT_TOKEN:
        from_secret: CODACY_PROJECT_TOKEN
    commands:
      - cd client
      - npm i codacy-coverage
      - cat ./coverage/lcov.info | npx codacy-coverage -c $DRONE_COMMIT_SHA
    when:
      event:
        - push

---
kind: pipeline
name: build

steps:
  - name: client
    image: node:10-jessie
    commands:
      - cd client
      - npm i
      - npx webpack --config webpack.production.config.babel.js

  - name: server
    image: python:3.6-jessie
    commands:
      - pip install -qr requirements.txt
      - mkdir gh_build
      - mkdir gh_build/virtool
      - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
      - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
      - python setup.py build
      - cp -rv build/exe.linux-x86_64-3.6/* gh_build/virtool
      - 'if [ "$DRONE_TAG" ]; then echo $DRONE_TAG > gh_build/virtool/VERSION; else echo "v0.0.0" > gh_build/virtool/VERSION; fi'
      - cd gh_build
      - tar -czf virtool.tar.gz virtool

  - name: upload
    image: plugins/s3
    settings:
      bucket: virtool
      region: sfo2
      access_key:
        from_secret: SPACES_KEY
      secret_key:
        from_secret: SPACES_SECRET
      source: gh_build/virtool.tar.gz
      strip_prefix: gh_build/
      target: /virtool-${DRONE_BUILD_NUMBER}-${DRONE_COMMIT}
      endpoint: https://sfo2.digitaloceanspaces.com
    when:
      event:
        - tag
        - push

  - name: publish
    image: plugins/github-release
    settings:
      api_key:
        from_secret: GITHUB_TOKEN
      files: gh_build/virtool.tar.gz
    when:
      event:
        - tag

depends_on:
  - server
  - client
