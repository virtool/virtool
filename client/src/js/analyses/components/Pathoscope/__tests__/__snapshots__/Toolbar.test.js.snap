// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<PathoscopeDownloadDropdownTitle /> should render 1`] = `
<span>
  <Icon
    faStyle="fas"
    fixedWidth={false}
    name="file-download"
    pullRight={false}
  />
   Export 
  <Icon
    faStyle="fas"
    fixedWidth={false}
    name="caret-down"
    pullRight={false}
  />
</span>
`;

exports[`<Toolbar /> should render 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="coverage"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [filterIsolates=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="coverage"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={false}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [filterOTUs=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="coverage"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={false}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [sortDescending=false] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="coverage"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [sortKey="depth"] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="depth"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;

exports[`<Toolbar /> should render when [sortKey="weight"] 1`] = `
<Toolbar__StyledPathoscopeToolbar>
  <SearchInput
    onChange={[Function]}
    onKeyDown={[Function]}
  />
  <Toolbar__PathoscopeToolbarSelect
    onChange={[Function]}
    value="weight"
  >
    <option
      className="text-primary"
      value="coverage"
    >
      Sort: Coverage
    </option>
    <option
      className="text-success"
      value="pi"
    >
      Sort: Weight
    </option>
    <option
      className="text-danger"
      value="depth"
    >
      Sort: Depth
    </option>
  </Toolbar__PathoscopeToolbarSelect>
  <Button
    bsStyle="default"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Sort List"
    tipPlacement="top"
    title="Sort Direction"
  >
    <Icon
      faStyle="fas"
      fixedWidth={false}
      name="sort-amount-down"
      pullRight={false}
    />
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide OTUs with low coverage support"
    tipPlacement="top"
  >
    Filter OTUs
  </Button>
  <Button
    active={true}
    bsStyle="default"
    icon="filter"
    onClick={[MockFunction]}
    pullRight={false}
    tip="Hide isolates with low coverage support"
    tipPlacement="top"
  >
    Filter Isolates
  </Button>
  <DropdownButton
    id="download-dropdown"
    title={<PathoscopeDownloadDropdownTitle />}
  >
    <DropdownItem
      href="/download/analyses/foo.csv"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-csv"
        pullRight={false}
      />
       CSV
    </DropdownItem>
    <DropdownItem
      href="/download/analyses/foo.xlsx"
    >
      <Icon
        faStyle="fas"
        fixedWidth={false}
        name="file-excel"
        pullRight={false}
      />
       Excel
    </DropdownItem>
  </DropdownButton>
</Toolbar__StyledPathoscopeToolbar>
`;
