name: publish

on:
  release:
    types: [published]

jobs:
  dockerhub:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Virtool' && !startsWith(github.event.release.tag_name, '4')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: "docker/Dockerfile"
          push: true
          tags: virtool/virtool:${{ github.event.release.tag_name }}
  github:
    runs-on: ubuntu-20.04
    if: github.repository_owner == 'Virtool' && startsWith(github.event.release.tag_name, '4')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Use Python 3.6
        uses: actions/setup-python@v2
        with:
          python-version: 3.6
      - name: Build Client
        run: |
          cd client
          npm i
          npx webpack --config webpack.production.config.babel.js
      - name: Build Server
        run: |
          pip install -r requirements.txt
          mkdir gh_build
          mkdir gh_build/virtool
          python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
          python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
          python setup.py build
          cp -rv build/exe.linux-x86_64-3.6/* gh_build/virtool
          echo "v${{ github.event.release.tag_name }}" > version.txt
          cd gh_build
          tar -czf virtool.tar.gz virtool
