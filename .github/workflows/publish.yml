name: publish

on:
  release:
    types: [published]

env:
  IMAGE_NAME: virtool/virtool
  REGISTRY: ghcr.io

jobs:
  hooks:
    runs-on: ubuntu-22.04
    if: github.repository_owner == 'Virtool'
    steps:
      - name: Trigger Cloudflare
        run: curl -X POST ${{ secrets.CLOUDFLARE_HOOK }}
  ghcr:
    runs-on: ubuntu-22.04
    if: github.repository_owner == 'Virtool'
    permissions:
      contents: read
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.release.tag_name }}
      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
      - name: Build and Push
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - name: Generate Artifact Attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true