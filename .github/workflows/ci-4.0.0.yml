name: ci-4.0.0

on:
  push:
    branches:
      - "4.0.0"
  pull_request:
    branches:
      - "4.0.0"

jobs:
  commitlint:
    runs-on: ubuntu-20.04
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: wagoid/commitlint-github-action@v4
  server:
    runs-on: ubuntu-18.04
    services:
      mongo:
        image: mongo:4.0
        ports:
          - 27017:27017
    container:
      image: virtool/external-tools:0.2.0
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-python@v2
        with:
          python-version: '3.6'
      - name: Test
        run: |
          pip install -qr requirements.txt
          pytest  -x --db-connection-string mongodb://mongo:27017 --cov --cov-report xml
  client:
    runs-on: ubuntu-18.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Test
        run: |
          cd client
          npm i
          npx jest --coverage
          npx webpack --config webpack.production.config.babel.js
  build:
    runs-on: ubuntu-18.04
    container:
      image: python:3.6-jessie
    needs: [client, server]
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: '12'
      - name: Build Client
        run: |
          cd client
          npm i
          npx webpack --config webpack.production.config.babel.js
      - name: Build Server
        env:
          RELEASE_VERSION: ${{ steps.set_version.outputs.tag }}
        run: |
          mkdir gh_build
          apt-get update
          apt-get install -y libssl-dev zlib1g-dev python-dev
          pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
          python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
          python setup.py build
          cp -rv build/exe.linux-x86_64-3.6 gh_build/virtool
          echo "artifact" > gh_build/virtool/VERSION
          cd gh_build
          tar -czf virtool.tar.gz virtool
      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: virtool.tar.gz
          path: gh_build/virtool.tar.gz
