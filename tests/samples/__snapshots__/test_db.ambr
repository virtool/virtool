# serializer version: 1
# name: TestDeriveWorkflowStates.test_define_initial_workflows[amplicon]
  dict({
    'aodp': 'none',
    'iimi': 'incompatible',
    'nuvs': 'incompatible',
    'pathoscope': 'incompatible',
  })
# ---
# name: TestDeriveWorkflowStates.test_define_initial_workflows[normal]
  dict({
    'aodp': 'incompatible',
    'iimi': 'none',
    'nuvs': 'none',
    'pathoscope': 'none',
  })
# ---
# name: TestDeriveWorkflowStates.test_define_initial_workflows[other]
  dict({
    'aodp': 'incompatible',
    'iimi': 'none',
    'nuvs': 'none',
    'pathoscope': 'none',
  })
# ---
# name: TestDeriveWorkflowStates.test_define_initial_workflows[srna]
  dict({
    'aodp': 'incompatible',
    'iimi': 'none',
    'nuvs': 'none',
    'pathoscope': 'none',
  })
# ---
# name: test_compress_sample_reads[False]
  set({
    'reads_1.fq.gz',
  })
# ---
# name: test_compress_sample_reads[False].1
  dict({
    '_id': 'foo',
    'files': list([
      dict({
        'download_url': '/download/samples/foo/reads_1.fq.gz',
        'from': dict({
          'id': 'M_S11_R1_001.fastq',
          'name': 'M_S11_R1_001.fastq',
          'size': 3750821789,
        }),
        'name': 'reads_1.fq.gz',
        'raw': False,
        'size': 6586501,
      }),
    ]),
    'paired': False,
  })
# ---
# name: test_compress_sample_reads[True]
  set({
    'reads_1.fq.gz',
    'reads_2.fq.gz',
  })
# ---
# name: test_compress_sample_reads[True].1
  dict({
    '_id': 'foo',
    'files': list([
      dict({
        'download_url': '/download/samples/foo/reads_1.fq.gz',
        'from': dict({
          'id': 'M_S11_R1_001.fastq',
          'name': 'M_S11_R1_001.fastq',
          'size': 3750821789,
        }),
        'name': 'reads_1.fq.gz',
        'raw': False,
        'size': 6586501,
      }),
      dict({
        'download_url': '/download/samples/foo/reads_2.fq.gz',
        'from': dict({
          'id': 'M_S11_R1_001.fastq',
          'name': 'M_S11_R1_001.fastq',
          'size': 3750821789,
        }),
        'name': 'reads_2.fq.gz',
        'raw': False,
        'size': 6586501,
      }),
    ]),
    'paired': True,
  })
# ---
# name: test_create_sample
  dict({
    'all_read': True,
    'all_write': False,
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': '',
    'group_read': True,
    'group_write': False,
    'hold': True,
    'host': '',
    'id': 'a2oj3gfd',
    'is_legacy': False,
    'isolate': '',
    'labels': list([
    ]),
    'library_type': '',
    'locale': '',
    'name': 'foo',
    'notes': 'test',
    'nuvs': False,
    'paired': False,
    'pathoscope': False,
    'quality': None,
    'ready': False,
    'subtractions': list([
    ]),
    'user': dict({
      'id': 'bob',
    }),
    'workflows': dict({
      'aodp': 'incompatible',
      'iimi': 'none',
      'nuvs': 'none',
      'pathoscope': 'none',
    }),
  })
# ---
# name: test_create_sample.1
  dict({
    '_id': 'a2oj3gfd',
    'all_read': True,
    'all_write': False,
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': '',
    'group_read': True,
    'group_write': False,
    'hold': True,
    'host': '',
    'is_legacy': False,
    'isolate': '',
    'labels': list([
    ]),
    'library_type': '',
    'locale': '',
    'name': 'foo',
    'notes': 'test',
    'nuvs': False,
    'paired': False,
    'pathoscope': False,
    'quality': None,
    'ready': False,
    'subtractions': list([
    ]),
    'user': dict({
      'id': 'bob',
    }),
    'workflows': dict({
      'aodp': 'incompatible',
      'iimi': 'none',
      'nuvs': 'none',
      'pathoscope': 'none',
    }),
  })
# ---
# name: test_update_is_compressed
  list([
    dict({
      '_id': 'foo',
      'files': list([
        dict({
          'name': 'reads_1.fq.gz',
        }),
        dict({
          'name': 'reads_2.fq.gz',
        }),
      ]),
      'is_compressed': True,
    }),
    dict({
      '_id': 'baz',
      'files': list([
        dict({
          'name': 'reads_1.fastq',
        }),
      ]),
    }),
    dict({
      '_id': 'bar',
      'files': list([
        dict({
          'name': 'reads_1.fq.gz',
        }),
      ]),
      'is_compressed': True,
    }),
  ])
# ---
