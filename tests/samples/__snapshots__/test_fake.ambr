# serializer version: 1
# name: test_create_fake_sample[False-False]
  dict({
    'all_read': True,
    'all_write': True,
    'artifacts': list([
    ]),
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': 'none',
    'group_read': True,
    'group_write': True,
    'hold': True,
    'host': 'Vine',
    'id': 'sample_1',
    'is_legacy': False,
    'isolate': 'Isolate A1',
    'job': None,
    'labels': list([
    ]),
    'library_type': <LibraryType.normal: 'normal'>,
    'locale': '',
    'name': 'Fake SAMPLE_1',
    'notes': 'Serious inside else memory if six.',
    'nuvs': False,
    'paired': False,
    'pathoscope': False,
    'quality': None,
    'reads': list([
    ]),
    'ready': False,
    'subtractions': list([
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflows': dict({
      'aodp': <WorkflowState.INCOMPATIBLE: 'incompatible'>,
      'nuvs': <WorkflowState.NONE: 'none'>,
      'pathoscope': <WorkflowState.NONE: 'none'>,
    }),
  })
# ---
# name: test_create_fake_sample[False-True]
  dict({
    'all_read': True,
    'all_write': True,
    'artifacts': list([
    ]),
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': 'none',
    'group_read': True,
    'group_write': True,
    'hold': True,
    'host': 'Vine',
    'id': 'sample_1',
    'is_legacy': False,
    'isolate': 'Isolate A1',
    'job': None,
    'labels': list([
    ]),
    'library_type': <LibraryType.normal: 'normal'>,
    'locale': '',
    'name': 'Fake SAMPLE_1',
    'notes': 'Serious inside else memory if six.',
    'nuvs': False,
    'paired': False,
    'pathoscope': False,
    'quality': None,
    'reads': list([
    ]),
    'ready': False,
    'subtractions': list([
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflows': dict({
      'aodp': <WorkflowState.INCOMPATIBLE: 'incompatible'>,
      'nuvs': <WorkflowState.NONE: 'none'>,
      'pathoscope': <WorkflowState.NONE: 'none'>,
    }),
  })
# ---
# name: test_create_fake_sample[True-False]
  dict({
    'all_read': True,
    'all_write': True,
    'artifacts': list([
    ]),
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': 'none',
    'group_read': True,
    'group_write': True,
    'hold': True,
    'host': 'Vine',
    'id': 'sample_1',
    'is_legacy': False,
    'isolate': 'Isolate A1',
    'job': None,
    'labels': list([
    ]),
    'library_type': <LibraryType.normal: 'normal'>,
    'locale': '',
    'name': 'Fake SAMPLE_1',
    'notes': 'Serious inside else memory if six.',
    'nuvs': False,
    'paired': False,
    'pathoscope': False,
    'quality': dict({
      'bases': list([
        list([
          31,
          32,
          31,
          31,
          32,
        ]),
        list([
          32,
          31,
          32,
          32,
          32,
        ]),
        list([
          31,
          32,
          32,
          32,
          31,
        ]),
        list([
          31,
          31,
          32,
          31,
          32,
        ]),
        list([
          32,
          31,
          32,
          31,
          31,
        ]),
      ]),
      'composition': list([
        list([
          19,
          90,
          1,
          1,
        ]),
        list([
          29,
          6,
          74,
          1,
        ]),
        list([
          82,
          69,
          1,
          1,
        ]),
        list([
          78,
          88,
          1,
          1,
        ]),
      ]),
      'count': 8997239604,
      'encoding': '''
        Sanger / Illumina 1.9
  
      ''',
      'gc': 90,
      'length': list([
        42,
        78,
      ]),
      'sequences': list([
        3909,
        8896,
        1494,
        5243,
        1786,
        9031,
        2044,
        8852,
        9882,
        7290,
        9769,
        5194,
        4756,
        3102,
        540,
        7807,
        1471,
        2450,
        1314,
        8594,
        8549,
        3525,
        9497,
        7382,
        5855,
        5313,
        7969,
        3119,
        265,
        1919,
        6095,
        5448,
        1018,
      ]),
    }),
    'reads': list([
      dict({
        'download_url': '/samples/sample_1/reads/reads_1.fq.gz',
        'id': 1,
        'name': 'reads_1.fq.gz',
        'name_on_disk': 'reads_1.fq.gz',
        'sample': 'sample_1',
        'size': 16700094,
        'upload': None,
        'uploaded_at': datetime.datetime(2015, 10, 6, 20, 0),
      }),
    ]),
    'ready': True,
    'subtractions': list([
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflows': dict({
      'aodp': <WorkflowState.INCOMPATIBLE: 'incompatible'>,
      'nuvs': <WorkflowState.NONE: 'none'>,
      'pathoscope': <WorkflowState.NONE: 'none'>,
    }),
  })
# ---
# name: test_create_fake_sample[True-True]
  dict({
    'all_read': True,
    'all_write': True,
    'artifacts': list([
    ]),
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'format': 'fastq',
    'group': 'none',
    'group_read': True,
    'group_write': True,
    'hold': True,
    'host': 'Vine',
    'id': 'sample_1',
    'is_legacy': False,
    'isolate': 'Isolate A1',
    'job': None,
    'labels': list([
    ]),
    'library_type': <LibraryType.normal: 'normal'>,
    'locale': '',
    'name': 'Fake SAMPLE_1',
    'notes': 'Serious inside else memory if six.',
    'nuvs': False,
    'paired': True,
    'pathoscope': False,
    'quality': dict({
      'bases': list([
        list([
          31,
          32,
          31,
          31,
          32,
        ]),
        list([
          32,
          31,
          32,
          32,
          32,
        ]),
        list([
          31,
          32,
          32,
          32,
          31,
        ]),
        list([
          31,
          31,
          32,
          31,
          32,
        ]),
        list([
          32,
          31,
          32,
          31,
          31,
        ]),
      ]),
      'composition': list([
        list([
          19,
          90,
          1,
          1,
        ]),
        list([
          29,
          6,
          74,
          1,
        ]),
        list([
          82,
          69,
          1,
          1,
        ]),
        list([
          78,
          88,
          1,
          1,
        ]),
      ]),
      'count': 8997239604,
      'encoding': '''
        Sanger / Illumina 1.9
  
      ''',
      'gc': 90,
      'length': list([
        42,
        78,
      ]),
      'sequences': list([
        3909,
        8896,
        1494,
        5243,
        1786,
        9031,
        2044,
        8852,
        9882,
        7290,
        9769,
        5194,
        4756,
        3102,
        540,
        7807,
        1471,
        2450,
        1314,
        8594,
        8549,
        3525,
        9497,
        7382,
        5855,
        5313,
        7969,
        3119,
        265,
        1919,
        6095,
        5448,
        1018,
      ]),
    }),
    'reads': list([
      dict({
        'download_url': '/samples/sample_1/reads/reads_1.fq.gz',
        'id': 1,
        'name': 'reads_1.fq.gz',
        'name_on_disk': 'reads_1.fq.gz',
        'sample': 'sample_1',
        'size': 35441105,
        'upload': None,
        'uploaded_at': datetime.datetime(2015, 10, 6, 20, 0),
      }),
      dict({
        'download_url': '/samples/sample_1/reads/reads_2.fq.gz',
        'id': 2,
        'name': 'reads_2.fq.gz',
        'name_on_disk': 'reads_2.fq.gz',
        'sample': 'sample_1',
        'size': 41550519,
        'upload': None,
        'uploaded_at': datetime.datetime(2015, 10, 6, 20, 0),
      }),
    ]),
    'ready': True,
    'subtractions': list([
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflows': dict({
      'aodp': <WorkflowState.INCOMPATIBLE: 'incompatible'>,
      'nuvs': <WorkflowState.NONE: 'none'>,
      'pathoscope': <WorkflowState.NONE: 'none'>,
    }),
  })
# ---
