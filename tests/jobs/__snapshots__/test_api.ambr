# serializer version: 1
# name: TestAcquire.test_ok
  dict({
    'acquired': True,
    'args': dict({
      'fact': 'LdJCGRddpwdyFKunVyUD',
      'nearly': 951.93581531826,
      'network': 'fhKcDVBJbHFDutYbbXjg',
      'season': 6981,
      'task': 'RrnFxjyvDAqsRnDaMrco',
      'third': 'SUEXExIZVPeFzGRmMglP',
    }),
    'created_at': str,
    'id': 'fb085f7f',
    'key': str,
    'ping': dict({
      'pinged_at': str,
    }),
    'progress': 3,
    'retries': 0,
    'stage': None,
    'state': 'preparing',
    'status': list([
      dict({
        'error': None,
        'progress': 0,
        'stage': None,
        'state': 'waiting',
        'step_description': None,
        'step_name': None,
        'timestamp': str,
      }),
      dict({
        'error': None,
        'progress': 3,
        'stage': None,
        'state': 'preparing',
        'step_description': None,
        'step_name': None,
        'timestamp': str,
      }),
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'bf1b993c',
    }),
    'workflow': 'pathoscope_bowtie',
  })
# ---
# name: TestFind.test_basic
  dict({
    'counts': dict({
      'cancelled': dict({
        'create_sample': 1,
      }),
      'complete': dict({
        'create_sample': 1,
      }),
      'error': dict({
        'aodp': 1,
        'create_sample': 1,
        'pathoscope_bowtie': 1,
      }),
      'terminated': dict({
        'build_index': 1,
        'nuvs': 2,
      }),
      'timeout': dict({
        'aodp': 1,
      }),
      'waiting': dict({
        'aodp': 1,
        'nuvs': 1,
      }),
    }),
    'documents': list([
      dict({
        'created_at': str,
        'id': '9c61c0ca',
        'progress': 30,
        'stage': 'CvVtXeeYGAaIAXQZUmce',
        'state': 'terminated',
        'user': dict({
          'handle': 'zclark',
          'id': '7cf872dc',
        }),
        'workflow': 'build_index',
      }),
      dict({
        'created_at': str,
        'id': '7cce8f87',
        'progress': 50,
        'stage': 'nOHABdcaOhguYUqQeuEZ',
        'state': 'error',
        'user': dict({
          'handle': 'zclark',
          'id': '7cf872dc',
        }),
        'workflow': 'pathoscope_bowtie',
      }),
      dict({
        'created_at': str,
        'id': '83e4c4f6',
        'progress': 60,
        'stage': 'iLUYCkyqgDOaIrTOqeaP',
        'state': 'error',
        'user': dict({
          'handle': 'zclark',
          'id': '7cf872dc',
        }),
        'workflow': 'aodp',
      }),
      dict({
        'created_at': str,
        'id': '606cd773',
        'progress': 100,
        'stage': 'DTrfalRqlzXAreDlttNm',
        'state': 'complete',
        'user': dict({
          'handle': 'zclark',
          'id': '7cf872dc',
        }),
        'workflow': 'create_sample',
      }),
      dict({
        'created_at': str,
        'id': '031ff6cb',
        'progress': 60,
        'stage': 'GNkXjEpGpwJnLsgFiwud',
        'state': 'cancelled',
        'user': dict({
          'handle': 'zclark',
          'id': '7cf872dc',
        }),
        'workflow': 'create_sample',
      }),
    ]),
    'found_count': 11,
    'page': 1,
    'page_count': 3,
    'per_page': 5,
    'total_count': 11,
  })
# ---
# name: TestFind.test_state_invalid
  list([
    dict({
      'in': 'query string',
      'loc': list([
        'state',
        0,
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'cancelled', 'complete', 'error', 'preparing', 'running', 'timeout', 'terminated', 'waiting'",
      'type': 'type_error.enum',
    }),
  ])
# ---
# name: TestPushStatus.test[None]
  dict({
    'error': None,
    'progress': 23,
    'stage': 'build',
    'state': 'running',
    'step_description': None,
    'step_name': None,
    'timestamp': '2015-10-06T20:00:00Z',
  })
# ---
# name: TestPushStatus.test_bad_state
  dict({
    'errors': dict({
      'state': list([
        'unallowed value bad',
      ]),
    }),
    'id': 'invalid_input',
    'message': 'Invalid input',
  })
# ---
# name: TestPushStatus.test_error[invalid-invalid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-invalid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-invalid-valid]
  tuple(
    201,
    dict({
      'error': dict({
        'details': list([
          'Valid',
        ]),
        'traceback': list([
          'Valid',
        ]),
        'type': 'KeyError',
      }),
      'progress': 14,
      'stage': 'fastqc',
      'state': 'error',
      'step_description': None,
      'step_name': None,
      'timestamp': '2015-10-06T20:00:00Z',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-missing-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-missing-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-missing-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-valid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-valid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[invalid-valid-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'traceback': list([
              'must be of list type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-invalid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-invalid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-invalid-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-missing-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-missing-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-missing-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-valid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-valid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[missing-valid-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'required field',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-invalid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-invalid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-invalid-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-missing-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-missing-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'required field',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-missing-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-valid-invalid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'must be of string type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-valid-missing]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
            'type': list([
              'required field',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_error[valid-valid-valid]
  tuple(
    422,
    dict({
      'errors': dict({
        'error': list([
          dict({
            'details': list([
              'must be of list type',
            ]),
            'traceback': list([
              'must be of list type',
            ]),
          }),
        ]),
      }),
      'id': 'invalid_input',
      'message': 'Invalid input',
    }),
  )
# ---
# name: TestPushStatus.test_missing_error
  tuple(
    400,
    dict({
      'id': 'bad_request',
      'message': 'Missing error information',
    }),
  )
# ---
# name: TestPushStatus.test_name_and_description
  dict({
    'error': None,
    'progress': 14,
    'stage': 'fastqc',
    'state': 'running',
    'step_description': 'Run FastQC on the raw data',
    'step_name': 'FastQC',
    'timestamp': '2015-10-06T20:00:00Z',
  })
# ---
# name: test_cancel[None]
  dict({
    'acquired': False,
    'args': dict({
      'analysis_id': 'e410429b',
      'index_id': '465428b0',
      'name': None,
      'sample_id': '1e01a382',
      'username': 'igboyes',
      'workflow': 'nuvs',
    }),
    'created_at': '2015-10-06T20:00:00Z',
    'id': '4c530449',
    'ping': None,
    'progress': 0,
    'retries': 0,
    'stage': 'mk_analysis_dir',
    'state': 'running',
    'status': list([
      dict({
        'error': None,
        'progress': 0,
        'stage': None,
        'state': 'waiting',
        'step_description': None,
        'step_name': None,
        'timestamp': '2015-10-06T20:00:00Z',
      }),
      dict({
        'error': None,
        'progress': 0,
        'stage': None,
        'state': 'running',
        'step_description': None,
        'step_name': None,
        'timestamp': '2015-10-06T20:00:00Z',
      }),
      dict({
        'error': None,
        'progress': 0,
        'stage': 'mk_analysis_dir',
        'state': 'running',
        'step_description': None,
        'step_name': None,
        'timestamp': '2015-10-06T20:00:00Z',
      }),
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflow': 'build_index',
  })
# ---
# name: test_get[None]
  dict({
    'acquired': True,
    'args': dict({
      'fact': 'LdJCGRddpwdyFKunVyUD',
      'nearly': 951.93581531826,
      'network': 'fhKcDVBJbHFDutYbbXjg',
      'season': 6981,
      'task': 'RrnFxjyvDAqsRnDaMrco',
      'third': 'SUEXExIZVPeFzGRmMglP',
    }),
    'created_at': str,
    'id': '7cf872dc',
    'ping': dict({
      'pinged_at': str,
    }),
    'progress': 10,
    'retries': 0,
    'stage': 'NzFJEUSgqMReEKilxKJT',
    'state': 'preparing',
    'status': list([
      dict({
        'error': None,
        'progress': 0,
        'stage': None,
        'state': 'waiting',
        'step_description': None,
        'step_name': None,
        'timestamp': str,
      }),
      dict({
        'error': None,
        'progress': 3,
        'stage': None,
        'state': 'preparing',
        'step_description': None,
        'step_name': None,
        'timestamp': str,
      }),
      dict({
        'error': None,
        'progress': 10,
        'stage': 'NzFJEUSgqMReEKilxKJT',
        'state': 'preparing',
        'step_description': 'bTDOKidKxUVFacqRcQYv',
        'step_name': 'NzFJEUSgqMReEKilxKJT',
        'timestamp': str,
      }),
    ]),
    'user': dict({
      'handle': 'leeashley',
      'id': 'fb085f7f',
    }),
    'workflow': 'pathoscope_bowtie',
  })
# ---
