# serializer version: 1
# name: TestUpgrade.test_modern_sample[SQLSampleReads after]
  list([
  ])
# ---
# name: TestUpgrade.test_modern_sample[SQLUploads after]
  list([
  ])
# ---
# name: TestUpgrade.test_modern_sample[modern_samplefiles after]
  list([
  ])
# ---
# name: TestUpgrade.test_modern_sample[mongo_after]
  list([
    dict({
      '_id': 'modern_sample',
      'is_legacy': False,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_paired_unknown_legacy[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=paired_unknown_legacy, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
    <SQLSampleReads(id=2, sample=paired_unknown_legacy, name=reads_2.fq.gz, name_on_disk=reads_2.fq.gz, size=44, upload=2, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_paired_unknown_legacy[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=paired_unknown_legacy.fastq, name_on_disk=paired_unknown_legacy.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
    <SQLUpload(id=2, created_at=None, name=paired_unknown_legacy_2.fastq, name_on_disk=paired_unknown_legacy_2.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_paired_unknown_legacy[mongo_after]
  list([
    dict({
      '_id': 'paired_unknown_legacy',
      'is_compressed': True,
      'is_legacy': True,
      'paired': True,
    }),
  ])
# ---
# name: TestUpgrade.test_paired_unknown_legacy[paired_unknown_legacyfiles after]
  list([
    'reads_1.fq.gz',
    'reads_2.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy.fastq, name_on_disk=unpaired_legacy.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy[unpaired_legacyfiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_compressed[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy_compressed, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=1, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_compressed[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy_compressed.fastq, name_on_disk=unpaired_legacy_compressed.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_compressed[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy_compressed',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_compressed[unpaired_legacy_compressedfiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy_no_from_size, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy_no_from_size.fastq, name_on_disk=unpaired_legacy_no_from_size.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=28, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy_no_from_size',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size[unpaired_legacy_no_from_sizefiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size_unrecoverable[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy_no_from_size_unrecoverable, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size_unrecoverable[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy_no_from_size_unrecoverable.fastq, name_on_disk=unpaired_legacy_no_from_size_unrecoverable.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=0, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size_unrecoverable[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy_no_from_size_unrecoverable',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_no_from_size_unrecoverable[unpaired_legacy_no_from_size_unrecoverablefiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_partial_compression[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy_partial_compression, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_partial_compression[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy_partial_compression.fastq, name_on_disk=unpaired_legacy_partial_compression.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_partial_compression[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy_partial_compression',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_partial_compression[unpaired_legacy_partial_compressionfiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_pre_existing_upload[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_legacy_pre_existing_upload, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_pre_existing_upload[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_legacy_pre_existing_upload, name_on_disk=unpaired_legacy_pre_existing_upload.fastq, ready=False, removed=False, removed_at=None, reserved=True, size=10, space=None, type=None, user=None, uploaded_at=2015-10-06 20:00:00)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_pre_existing_upload[mongo_after]
  list([
    dict({
      '_id': 'unpaired_legacy_pre_existing_upload',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_legacy_pre_existing_upload[unpaired_legacy_pre_existing_uploadfiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
# name: TestUpgrade.test_unpaired_unknown_legacy[SQLSampleReads after]
  list([
    <SQLSampleReads(id=1, sample=unpaired_unknown_legacy, name=reads_1.fq.gz, name_on_disk=reads_1.fq.gz, size=44, upload=1, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_unknown_legacy[SQLUploads after]
  list([
    <SQLUpload(id=1, created_at=None, name=unpaired_unknown_legacy.fastq, name_on_disk=unpaired_unknown_legacy.fastq, ready=False, removed=True, removed_at=None, reserved=True, size=1, space=None, type=None, user=None, uploaded_at=None)>,
  ])
# ---
# name: TestUpgrade.test_unpaired_unknown_legacy[mongo_after]
  list([
    dict({
      '_id': 'unpaired_unknown_legacy',
      'is_compressed': True,
      'is_legacy': True,
      'paired': False,
    }),
  ])
# ---
# name: TestUpgrade.test_unpaired_unknown_legacy[unpaired_unknown_legacyfiles after]
  list([
    'reads_1.fq.gz',
  ])
# ---
