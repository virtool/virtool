# serializer version: 1
# name: TestUpdate.test_non_existent_primary_group
  dict({
    'id': 'bad_request',
    'message': 'Non-existent group: 4',
  })
# ---
# name: TestUpdate.test_not_a_member_of_primary_group
  dict({
    'id': 'bad_request',
    'message': 'User is not member of primary group',
  })
# ---
# name: TestUpdate.test_not_found
  dict({
    'id': 'not_found',
    'message': 'User does not exist',
  })
# ---
# name: TestUpdate.test_ok
  dict({
    'active': True,
    'administrator_role': None,
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': True,
    'groups': list([
      dict({
        'id': 1,
        'legacy_id': None,
        'name': 'musicians',
      }),
    ]),
    'handle': 'qtaylor',
    'id': 'fb085f7f',
    'last_password_change': '2015-10-06T20:00:00Z',
    'permissions': dict({
      'cancel_job': False,
      'create_ref': False,
      'create_sample': False,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': True,
    }),
    'primary_group': dict({
      'id': 1,
      'legacy_id': None,
      'name': 'musicians',
    }),
  })
# ---
# name: TestUpdate.test_short_password
  dict({
    'id': 'bad_request',
    'message': 'Password does not meet minimum length requirement (8)',
  })
# ---
# name: TestUpdate.test_with_groups
  dict({
    'active': True,
    'administrator_role': None,
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': True,
    'groups': list([
      dict({
        'id': 2,
        'legacy_id': None,
        'name': 'hydrogeologists',
      }),
      dict({
        'id': 1,
        'legacy_id': None,
        'name': 'musicians',
      }),
    ]),
    'handle': 'qtaylor',
    'id': 'fb085f7f',
    'last_password_change': '2015-10-06T20:00:00Z',
    'permissions': dict({
      'cancel_job': False,
      'create_ref': True,
      'create_sample': True,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': True,
    }),
    'primary_group': None,
  })
# ---
# name: test_add_permission[invalid_permission]
  list([
    dict({
      'ctx': dict({
        'enum_values': list([
          'owner',
          'member',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'owner', 'member'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'label_manager',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'label_manager'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'project_manager',
          'project_editor',
          'project_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'project_manager', 'project_editor', 'project_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'reference_manager',
          'reference_builder',
          'reference_editor',
          'reference_contributor',
          'reference_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'reference_manager', 'reference_builder', 'reference_editor', 'reference_contributor', 'reference_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'sample_manager',
          'sample_editor',
          'sample_analyzer',
          'sample_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'sample_manager', 'sample_editor', 'sample_analyzer', 'sample_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'subtraction_manager',
          'subtraction_editor',
          'subtraction_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'subtraction_manager', 'subtraction_editor', 'subtraction_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'upload_manager',
          'upload_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'upload_manager', 'upload_viewer'",
      'type': 'type_error.enum',
    }),
  ])
# ---
# name: test_add_permission[valid_permission]
  True
# ---
# name: test_create[None]
  dict({
    'active': True,
    'administrator_role': None,
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': False,
    'groups': list([
    ]),
    'handle': 'fred',
    'id': '7cf872dc',
    'last_password_change': '2015-10-06T20:00:00Z',
    'permissions': dict({
      'cancel_job': False,
      'create_ref': False,
      'create_sample': False,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': False,
    }),
    'primary_group': None,
  })
# ---
# name: test_create[None][data_layer]
  dict({
    'active': True,
    'administrator_role': None,
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': False,
    'groups': list([
    ]),
    'handle': 'fred',
    'id': '7cf872dc',
    'last_password_change': datetime.datetime(2015, 10, 6, 20, 0),
    'permissions': dict({
      'cancel_job': False,
      'create_ref': False,
      'create_sample': False,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': False,
    }),
    'primary_group': None,
  })
# ---
# name: test_create[None][db]
  dict({
    '_id': '7cf872dc',
    'active': True,
    'force_reset': False,
    'groups': list([
    ]),
    'handle': 'fred',
    'invalidate_sessions': False,
    'last_password_change': datetime.datetime(2015, 10, 6, 20, 0),
    'primary_group': None,
    'settings': dict({
      'quick_analyze_workflow': 'pathoscope_bowtie',
      'show_ids': True,
      'show_versions': True,
      'skip_quick_analyze_dialog': True,
    }),
  })
# ---
# name: test_create[None][location]
  '/users/7cf872dc'
# ---
# name: test_create_first_user[False-201]
  dict({
    'active': True,
    'administrator_role': 'full',
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': False,
    'groups': list([
    ]),
    'handle': 'fred',
    'id': 'bf1b993c',
    'last_password_change': '2015-10-06T20:00:00Z',
    'permissions': dict({
      'cancel_job': False,
      'create_ref': False,
      'create_sample': False,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': False,
    }),
    'primary_group': None,
  })
# ---
# name: test_create_first_user[True-409]
  dict({
    'id': 'conflict',
    'message': 'Virtool already has at least one user',
  })
# ---
# name: test_find[None]
  dict({
    'documents': list([
      dict({
        'force_reset': False,
        'groups': list([
          1,
        ]),
        'handle': 'bob',
        'id': 'bf1b993c',
        'last_password_change': '2015-10-06T20:00:00Z',
        'permissions': dict({
          'cancel_job': False,
          'create_ref': False,
          'create_sample': True,
          'modify_hmm': False,
          'modify_subtraction': False,
          'remove_file': False,
          'remove_job': False,
          'upload_file': False,
        }),
        'primary_group': None,
      }),
      dict({
        'force_reset': False,
        'groups': list([
        ]),
        'handle': 'laura56',
        'id': 'fb085f7f',
        'last_password_change': '2015-10-06T20:00:00Z',
        'permissions': dict({
          'cancel_job': False,
          'create_ref': False,
          'create_sample': False,
          'modify_hmm': False,
          'modify_subtraction': False,
          'remove_file': False,
          'remove_job': False,
          'upload_file': False,
        }),
        'primary_group': None,
      }),
      dict({
        'force_reset': False,
        'groups': list([
        ]),
        'handle': 'sjohnson',
        'id': '7cf872dc',
        'last_password_change': '2015-10-06T20:00:00Z',
        'permissions': dict({
          'cancel_job': False,
          'create_ref': False,
          'create_sample': False,
          'modify_hmm': False,
          'modify_subtraction': False,
          'remove_file': False,
          'remove_job': False,
          'upload_file': False,
        }),
        'primary_group': None,
      }),
    ]),
    'found_count': 3,
    'page': 1,
    'page_count': 1,
    'per_page': 25,
    'total_count': 3,
  })
# ---
# name: test_find[fred]
  dict({
    'documents': list([
      dict({
        'force_reset': False,
        'groups': list([
        ]),
        'handle': 'fred',
        'id': 'fb085f7f',
        'last_password_change': '2015-10-06T20:00:00Z',
        'permissions': dict({
          'cancel_job': False,
          'create_ref': False,
          'create_sample': False,
          'modify_hmm': False,
          'modify_subtraction': False,
          'remove_file': False,
          'remove_job': False,
          'upload_file': False,
        }),
        'primary_group': None,
      }),
    ]),
    'found_count': 1,
    'page': 1,
    'page_count': 1,
    'per_page': 25,
    'total_count': 3,
  })
# ---
# name: test_get[200]
  dict({
    'active': True,
    'administrator_role': None,
    'b2c': None,
    'b2c_display_name': None,
    'b2c_family_name': None,
    'b2c_given_name': None,
    'b2c_oid': None,
    'force_reset': False,
    'groups': list([
      dict({
        'id': 2,
        'legacy_id': None,
        'name': 'hydrogeologists',
      }),
      dict({
        'id': 1,
        'legacy_id': None,
        'name': 'musicians',
      }),
    ]),
    'handle': 'qtaylor',
    'id': 'fb085f7f',
    'last_password_change': '2015-10-06T20:00:00Z',
    'permissions': dict({
      'cancel_job': False,
      'create_ref': False,
      'create_sample': False,
      'modify_hmm': False,
      'modify_subtraction': False,
      'remove_file': False,
      'remove_job': False,
      'upload_file': False,
    }),
    'primary_group': None,
  })
# ---
# name: test_get[404]
  dict({
    'id': 'not_found',
    'message': 'Not found',
  })
# ---
# name: test_list_permissions[bob]
  list([
  ])
# ---
# name: test_list_permissions[test]
  list([
    dict({
      'id': 'reference_builder',
    }),
    dict({
      'id': 'sample_editor',
    }),
  ])
# ---
# name: test_remove_permission[invalid_permission]
  list([
    dict({
      'ctx': dict({
        'enum_values': list([
          'owner',
          'member',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'owner', 'member'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'label_manager',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'label_manager'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'project_manager',
          'project_editor',
          'project_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'project_manager', 'project_editor', 'project_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'reference_manager',
          'reference_builder',
          'reference_editor',
          'reference_contributor',
          'reference_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'reference_manager', 'reference_builder', 'reference_editor', 'reference_contributor', 'reference_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'sample_manager',
          'sample_editor',
          'sample_analyzer',
          'sample_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'sample_manager', 'sample_editor', 'sample_analyzer', 'sample_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'subtraction_manager',
          'subtraction_editor',
          'subtraction_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'subtraction_manager', 'subtraction_editor', 'subtraction_viewer'",
      'type': 'type_error.enum',
    }),
    dict({
      'ctx': dict({
        'enum_values': list([
          'upload_manager',
          'upload_viewer',
        ]),
      }),
      'in': 'path',
      'loc': list([
        'role',
      ]),
      'msg': "value is not a valid enumeration member; permitted: 'upload_manager', 'upload_viewer'",
      'type': 'type_error.enum',
    }),
  ])
# ---
# name: test_remove_permission[valid_permission]
  True
# ---
