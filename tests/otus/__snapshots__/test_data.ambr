# serializer version: 1
# name: test_create[full][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Created Tobacco mosaic virus (TMV)',
    'diff': dict({
      '_id': 'fb085f7f',
      'abbreviation': 'TMV',
      'isolates': list([
      ]),
      'last_indexed_version': None,
      'lower_name': 'tobacco mosaic virus',
      'name': 'Tobacco mosaic virus',
      'reference': dict({
        'id': 'hxn167',
      }),
      'schema': list([
      ]),
      'verified': False,
      'version': 0,
    }),
    'id': 'fb085f7f.0',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.create: 'create'>,
    'otu': dict({
      'id': 'fb085f7f',
      'name': 'Tobacco mosaic virus',
      'version': 0,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 'bf1b993c',
    }),
  })
# ---
# name: test_create[full][otu]
  dict({
    'abbreviation': 'TMV',
    'id': 'fb085f7f',
    'isolates': list([
    ]),
    'issues': dict({
      'empty_isolate': False,
      'empty_otu': True,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Created Tobacco mosaic virus (TMV)',
      'id': 'fb085f7f.0',
      'method_name': <HistoryMethod.create: 'create'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 'bf1b993c',
      }),
    }),
    'name': 'Tobacco mosaic virus',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 0,
  })
# ---
# name: test_create[full][return_value]
  dict({
    'abbreviation': 'TMV',
    'id': 'fb085f7f',
    'isolates': list([
    ]),
    'issues': dict({
      'empty_isolate': False,
      'empty_otu': True,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Created Tobacco mosaic virus (TMV)',
      'id': 'fb085f7f.0',
      'method_name': <HistoryMethod.create: 'create'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 'bf1b993c',
      }),
    }),
    'name': 'Tobacco mosaic virus',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 0,
  })
# ---
# name: test_create[no_abbreviation][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Created Prunus virus A',
    'diff': dict({
      '_id': 'fb085f7f',
      'abbreviation': '',
      'isolates': list([
      ]),
      'last_indexed_version': None,
      'lower_name': 'prunus virus a',
      'name': 'Prunus virus A',
      'reference': dict({
        'id': 'hxn167',
      }),
      'schema': list([
      ]),
      'verified': False,
      'version': 0,
    }),
    'id': 'fb085f7f.0',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.create: 'create'>,
    'otu': dict({
      'id': 'fb085f7f',
      'name': 'Prunus virus A',
      'version': 0,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 'bf1b993c',
    }),
  })
# ---
# name: test_create[no_abbreviation][otu]
  dict({
    'abbreviation': '',
    'id': 'fb085f7f',
    'isolates': list([
    ]),
    'issues': dict({
      'empty_isolate': False,
      'empty_otu': True,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Created Prunus virus A',
      'id': 'fb085f7f.0',
      'method_name': <HistoryMethod.create: 'create'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 'bf1b993c',
      }),
    }),
    'name': 'Prunus virus A',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 0,
  })
# ---
# name: test_create[no_abbreviation][return_value]
  dict({
    'abbreviation': '',
    'id': 'fb085f7f',
    'isolates': list([
    ]),
    'issues': dict({
      'empty_isolate': False,
      'empty_otu': True,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Created Prunus virus A',
      'id': 'fb085f7f.0',
      'method_name': <HistoryMethod.create: 'create'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 'bf1b993c',
      }),
    }),
    'name': 'Prunus virus A',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 0,
  })
# ---
# name: test_get_fasta
  tuple(
    'prunus_virus_f.fa',
    '''
      >Prunus virus F|Isolate 8816-v2|abcd1234|27
      TGTTTAAGAGATTAAACAACCGCTTTC
      >Prunus virus F|Isolate A|AX12345|12
      ATAGAGGAGTTA
    ''',
  )
# ---
# name: test_set_default
  dict({
    'default': True,
    'id': 'bar',
    'sequences': list([
    ]),
    'source_name': 'A',
    'source_type': 'isolate',
  })
# ---
# name: test_set_default.1
  dict({
    '_id': '6116cba1',
    'abbreviation': 'PVF',
    'isolates': list([
      dict({
        'default': False,
        'id': 'cab8b360',
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
      dict({
        'default': True,
        'id': 'bar',
        'source_name': 'A',
        'source_type': 'isolate',
      }),
    ]),
    'last_indexed_version': 0,
    'lower_name': 'prunus virus f',
    'name': 'Prunus virus F',
    'reference': dict({
      'id': 'hxn167',
    }),
    'remote_id': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: test_set_default.2
  dict({
    '_id': '6116cba1.1',
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Set Isolate A as default',
    'diff': 'postgres',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': 'set_as_default',
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'id': 'hxn167',
    }),
    'user': dict({
      'id': 'bob',
    }),
  })
# ---
# name: test_update[history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic virus and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'name',
        list([
          'Pepper leafroll virus',
          'Tobacco mosaic virus',
        ]),
      ]),
      list([
        'change',
        'abbreviation',
        list([
          'PLV',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'lower_name',
        list([
          'pepper leafroll virus',
          'tobacco mosaic virus',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          4,
          5,
        ]),
      ]),
    ]),
    'id': 'fb085f7f.5',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': 'fb085f7f',
      'name': 'Pepper leafroll virus',
      'version': 5,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 'bf1b993c',
    }),
  })
# ---
# name: test_update[return_value]
  dict({
    'abbreviation': 'TMV',
    'id': 'fb085f7f',
    'isolates': list([
      dict({
        'default': True,
        'id': '7cf872dc',
        'sequences': list([
          dict({
            'accession': 'NC_795330',
            'definition': 'Bring determine some forward staff.',
            'host': 'prunus',
            'id': '3cbb22cc',
            'remote': None,
            'segment': 'RNA_C',
            'sequence': 'GGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMT',
            'target': None,
          }),
          dict({
            'accession': 'NC_076279',
            'definition': 'Purpose character would in.',
            'host': 'rice',
            'id': 'da42dca3',
            'remote': None,
            'segment': 'RNA-U3',
            'sequence': 'CCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGYGGGGCGGGTAGGAATGTGGCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACARGCTANACBGTAANAAGAAGAACTAGTAG',
            'target': None,
          }),
          dict({
            'accession': 'QX375248',
            'definition': 'Bar standard final.',
            'host': 'apple',
            'id': '09d01419',
            'remote': None,
            'segment': 'RNA L',
            'sequence': 'ACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTTCTAACGCAAATCCCCTCGTGGRCTGATHTCTAATCCCAATSATCYWACTCGGGGGAAGCNATTGCYGNCHATCHCGCCTTTABCGGSTTCTAGCCGAKCGCCGACATCTTGABCACACGTTCMGTGAAVGCCTGGCAGGNGAVGCTGCACAGGGACTAGSKCGATYCTATCTGTAGCHAGACCAGTGGGGGGAAACAACATAATGTCGGATTCDACATBYAGGKCTGCGAATTCTGGTAGCAACCCTCTACACGAATCTGCCAAKAAACCTTCTGCCATGACHTCAATCCGTTGCGGAACCCTAKTATCCGACTGTGANCTGTATTCCGCAACTASAYCSGTCATMATAGGCCTCGGACGCGCBCCAACGACAGGCATTCGCNGAHATCTATTGCAGATGGTCHGGCVKTTCTCRTTCTCAGTCTCCCA',
            'target': None,
          }),
        ]),
        'source_name': 'Position',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic virus and changed abbreviation to TMV and modified schema',
      'id': 'fb085f7f.5',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 'bf1b993c',
      }),
    }),
    'name': 'Tobacco mosaic virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA_C',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-U3',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA L',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': True,
    'version': 5,
  })
# ---
