# serializer version: 1
# name: TestAddIsolate.test_default[True-False][history]
  list([
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Created Prunus virus F (PVF)', id='fb085f7f.0', method_name=<HistoryMethod.create: 'create'>, user=UserNested(id=2, handle='laura56'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=0), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff={'_id': 'fb085f7f', 'name': 'Prunus virus F', 'schema': [{'name': 'Genome', 'molecule': 'ssRNA', 'required': True}], 'version': 0, 'isolates': [], 'verified': False, 'reference': {'id': 'bf1b993c'}, 'lower_name': 'prunus virus f', 'abbreviation': 'PVF', 'last_indexed_version': None}),
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Added B isolate as default', id='fb085f7f.1', method_name=<HistoryMethod.add_isolate: 'add_isolate'>, user=UserNested(id=2, handle='laura56'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=1), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff=[['add', 'isolates', [[0, {'id': '7cf872dc', 'default': True, 'sequences': [], 'source_name': 'isolate', 'source_type': 'b'}]]], ['change', 'version', [0, 1]]]),
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Added Isolate a', id='fb085f7f.2', method_name=<HistoryMethod.add_isolate: 'add_isolate'>, user=UserNested(id=1, handle='leeashley'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=2), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff=[['add', 'isolates', [[1, {'id': '3cbb22cc', 'default': False, 'sequences': [], 'source_name': 'a', 'source_type': 'isolate'}]]], ['change', 'version', [1, 2]]]),
  ])
# ---
# name: TestAddIsolate.test_default[True-False][json]
  dict({
    'default': False,
    'id': '3cbb22cc',
    'sequences': list([
    ]),
    'source_name': 'a',
    'source_type': 'isolate',
  })
# ---
# name: TestAddIsolate.test_default[True-False][location]
  'https://virtool.example.com/otus/fb085f7f/isolates/3cbb22cc'
# ---
# name: TestAddIsolate.test_default[True-False][otu]
  dict({
    'abbreviation': 'PVF',
    'id': 'fb085f7f',
    'isolates': list([
      dict({
        'default': True,
        'id': '7cf872dc',
        'sequences': list([
        ]),
        'source_name': 'isolate',
        'source_type': 'b',
      }),
      dict({
        'default': False,
        'id': '3cbb22cc',
        'sequences': list([
        ]),
        'source_name': 'a',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        '7cf872dc',
        '3cbb22cc',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': 'not_approximately_now_datetime',
      'description': 'Added Isolate a',
      'id': 'fb085f7f.2',
      'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'Genome',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'bf1b993c',
      'name': 'Example',
    }),
    'remote': None,
    'verified': False,
    'version': 2,
  })
# ---
# name: TestAddIsolate.test_default[True-True][history]
  list([
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Created Prunus virus F (PVF)', id='fb085f7f.0', method_name=<HistoryMethod.create: 'create'>, user=UserNested(id=2, handle='laura56'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=0), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff={'_id': 'fb085f7f', 'name': 'Prunus virus F', 'schema': [{'name': 'Genome', 'molecule': 'ssRNA', 'required': True}], 'version': 0, 'isolates': [], 'verified': False, 'reference': {'id': 'bf1b993c'}, 'lower_name': 'prunus virus f', 'abbreviation': 'PVF', 'last_indexed_version': None}),
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Added B isolate as default', id='fb085f7f.1', method_name=<HistoryMethod.add_isolate: 'add_isolate'>, user=UserNested(id=2, handle='laura56'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=1), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff=[['add', 'isolates', [[0, {'id': '7cf872dc', 'default': True, 'sequences': [], 'source_name': 'isolate', 'source_type': 'b'}]]], ['change', 'version', [0, 1]]]),
    History(created_at=datetime.datetime(2015, 10, 6, 20, 0), description='Added Isolate a as default', id='fb085f7f.2', method_name=<HistoryMethod.add_isolate: 'add_isolate'>, user=UserNested(id=1, handle='leeashley'), index=HistoryIndex(id='unbuilt', version='unbuilt'), otu=HistoryOTU(id='fb085f7f', name='Prunus virus F', version=2), reference=ReferenceNested(id='bf1b993c', data_type=<ReferenceDataType.genome: 'genome'>, name='Example'), diff=[['change', ['isolates', 0, 'default'], [True, False]], ['add', 'isolates', [[1, {'id': '3cbb22cc', 'default': True, 'sequences': [], 'source_name': 'a', 'source_type': 'isolate'}]]], ['change', 'version', [1, 2]]]),
  ])
# ---
# name: TestAddIsolate.test_default[True-True][json]
  dict({
    'default': True,
    'id': '3cbb22cc',
    'sequences': list([
    ]),
    'source_name': 'a',
    'source_type': 'isolate',
  })
# ---
# name: TestAddIsolate.test_default[True-True][location]
  'https://virtool.example.com/otus/fb085f7f/isolates/3cbb22cc'
# ---
# name: TestAddIsolate.test_default[True-True][otu]
  dict({
    'abbreviation': 'PVF',
    'id': 'fb085f7f',
    'isolates': list([
      dict({
        'default': False,
        'id': '7cf872dc',
        'sequences': list([
        ]),
        'source_name': 'isolate',
        'source_type': 'b',
      }),
      dict({
        'default': True,
        'id': '3cbb22cc',
        'sequences': list([
        ]),
        'source_name': 'a',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        '7cf872dc',
        '3cbb22cc',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': 'not_approximately_now_datetime',
      'description': 'Added Isolate a as default',
      'id': 'fb085f7f.2',
      'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'Genome',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'bf1b993c',
      'name': 'Example',
    }),
    'remote': None,
    'verified': False,
    'version': 2,
  })
# ---
# name: TestAddIsolate.test_first[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Added Isolate b as default',
    'diff': list([
      list([
        'add',
        'isolates',
        list([
          list([
            0,
            dict({
              'default': True,
              'id': 'fb085f7f',
              'sequences': list([
              ]),
              'source_name': 'b',
              'source_type': 'isolate',
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestAddIsolate.test_first[True][json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
    ]),
    'source_name': 'b',
    'source_type': 'isolate',
  })
# ---
# name: TestAddIsolate.test_first[True][location]
  'https://virtool.example.com/otus/bf1b993c/isolates/fb085f7f'
# ---
# name: TestAddIsolate.test_first[True][otu]
  dict({
    'abbreviation': 'PVF',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
        ]),
        'source_name': 'b',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'fb085f7f',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Added Isolate b as default',
      'id': 'bf1b993c.1',
      'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'Genome',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestAddIsolate.test_force_case[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Added Isolate Beta as default',
    'diff': list([
      list([
        'add',
        'isolates',
        list([
          list([
            0,
            dict({
              'default': True,
              'id': 'fb085f7f',
              'sequences': list([
              ]),
              'source_name': 'Beta',
              'source_type': 'isolate',
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestAddIsolate.test_force_case[True][json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
    ]),
    'source_name': 'Beta',
    'source_type': 'isolate',
  })
# ---
# name: TestAddIsolate.test_force_case[True][location]
  'https://virtool.example.com/otus/bf1b993c/isolates/fb085f7f'
# ---
# name: TestAddIsolate.test_force_case[True][otu]
  dict({
    'abbreviation': 'PVF',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
        ]),
        'source_name': 'Beta',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'fb085f7f',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Added Isolate Beta as default',
      'id': 'bf1b993c.1',
      'method_name': <HistoryMethod.add_isolate: 'add_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'Genome',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestCreateSequence.test_ok[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Created new sequence foobar in Isolate Position',
    'diff': list([
      list([
        'add',
        list([
          'isolates',
          0,
          'sequences',
        ]),
        list([
          list([
            3,
            dict({
              '_id': 'bf1b993c',
              'accession': 'foobar',
              'definition': 'A made up sequence',
              'host': 'Plant',
              'isolate_id': 'fb085f7f',
              'otu_id': 'bf1b993c',
              'reference': dict({
                'id': 'hxn167',
              }),
              'segment': None,
              'sequence': 'ATGCGTGTACTG',
              'target': None,
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          4,
          5,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.5',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.create_sequence: 'create_sequence'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Pepper leafroll virus',
      'version': 5,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'hendersonemma',
      'id': 2,
    }),
  })
# ---
# name: TestCreateSequence.test_ok[True][json]
  dict({
    'accession': 'foobar',
    'definition': 'A made up sequence',
    'host': 'Plant',
    'id': 'bf1b993c',
    'remote': None,
    'segment': None,
    'sequence': 'ATGCGTGTACTG',
    'target': None,
  })
# ---
# name: TestCreateSequence.test_ok[True][location]
  '/otus/bf1b993c/isolates/fb085f7f/sequences/bf1b993c'
# ---
# name: TestCreateSequence.test_ok[True][otu]
  dict({
    'abbreviation': 'PLV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
          dict({
            'accession': 'NC_795330',
            'definition': 'Bring determine some forward staff.',
            'host': 'prunus',
            'id': '7cf872dc',
            'remote': None,
            'segment': 'RNA_C',
            'sequence': 'GGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMT',
            'target': None,
          }),
          dict({
            'accession': 'NC_076279',
            'definition': 'Purpose character would in.',
            'host': 'rice',
            'id': '3cbb22cc',
            'remote': None,
            'segment': 'RNA-U3',
            'sequence': 'CCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGYGGGGCGGGTAGGAATGTGGCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACARGCTANACBGTAANAAGAAGAACTAGTAG',
            'target': None,
          }),
          dict({
            'accession': 'QX375248',
            'definition': 'Bar standard final.',
            'host': 'apple',
            'id': 'da42dca3',
            'remote': None,
            'segment': 'RNA L',
            'sequence': 'ACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTTCTAACGCAAATCCCCTCGTGGRCTGATHTCTAATCCCAATSATCYWACTCGGGGGAAGCNATTGCYGNCHATCHCGCCTTTABCGGSTTCTAGCCGAKCGCCGACATCTTGABCACACGTTCMGTGAAVGCCTGGCAGGNGAVGCTGCACAGGGACTAGSKCGATYCTATCTGTAGCHAGACCAGTGGGGGGAAACAACATAATGTCGGATTCDACATBYAGGKCTGCGAATTCTGGTAGCAACCCTCTACACGAATCTGCCAAKAAACCTTCTGCCATGACHTCAATCCGTTGCGGAACCCTAKTATCCGACTGTGANCTGTATTCCGCAACTASAYCSGTCATMATAGGCCTCGGACGCGCBCCAACGACAGGCATTCGCNGAHATCTATTGCAGATGGTCHGGCVKTTCTCRTTCTCAGTCTCCCA',
            'target': None,
          }),
          dict({
            'accession': 'foobar',
            'definition': 'A made up sequence',
            'host': 'Plant',
            'id': 'bf1b993c',
            'remote': None,
            'segment': None,
            'sequence': 'ATGCGTGTACTG',
            'target': None,
          }),
        ]),
        'source_name': 'Position',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Created new sequence foobar in Isolate Position',
      'id': 'bf1b993c.5',
      'method_name': <HistoryMethod.create_sequence: 'create_sequence'>,
      'user': dict({
        'handle': 'hendersonemma',
        'id': 2,
      }),
    }),
    'name': 'Pepper leafroll virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA_C',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-U3',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA L',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': True,
    'version': 5,
  })
# ---
# name: TestCreateSequence.test_ok[True][sequence]
  dict({
    'accession': 'foobar',
    'definition': 'A made up sequence',
    'host': 'Plant',
    'id': 'bf1b993c',
    'otu_id': 'bf1b993c',
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'segment': None,
    'sequence': 'ATGCGTGTACTG',
    'target': None,
  })
# ---
# name: TestDelete.test_ok[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Removed Blueberry bunchy top virus (BBTV)',
    'diff': dict({
      '_id': 'bf1b993c',
      'abbreviation': 'BBTV',
      'isolates': list([
        dict({
          'default': True,
          'id': 'fb085f7f',
          'sequences': list([
            dict({
              '_id': '7cf872dc',
              'accession': 'QH302258',
              'definition': 'Tv program actually race tonight themselves true power.',
              'host': 'garlic',
              'isolate_id': 'fb085f7f',
              'otu_id': 'bf1b993c',
              'reference': dict({
                'id': 'hxn167',
              }),
              'segment': 'RNA-M',
              'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
              'target': None,
            }),
          ]),
          'source_name': 'This',
          'source_type': 'isolate',
        }),
      ]),
      'last_indexed_version': None,
      'lower_name': 'blueberry bunchy top virus',
      'name': 'Blueberry bunchy top virus',
      'reference': dict({
        'id': 'hxn167',
      }),
      'schema': list([
        dict({
          'molecule': 'ssRNA',
          'name': 'RNA-M',
          'required': True,
        }),
      ]),
      'verified': True,
      'version': 2,
    }),
    'id': 'bf1b993c.removed',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.remove: 'remove'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Blueberry bunchy top virus',
      'version': 'removed',
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestDeleteIsolate.test_default[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Removed Isolate This and set Isolate b as default',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'id',
        ]),
        list([
          'fb085f7f',
          '3cbb22cc',
        ]),
      ]),
      list([
        'change',
        list([
          'isolates',
          0,
          'source_name',
        ]),
        list([
          'This',
          'b',
        ]),
      ]),
      list([
        'remove',
        list([
          'isolates',
          0,
          'sequences',
        ]),
        list([
          list([
            0,
            dict({
              '_id': '7cf872dc',
              'accession': 'QH302258',
              'definition': 'Tv program actually race tonight themselves true power.',
              'host': 'garlic',
              'isolate_id': 'fb085f7f',
              'otu_id': 'bf1b993c',
              'reference': dict({
                'id': 'hxn167',
              }),
              'segment': 'RNA-M',
              'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
              'target': None,
            }),
          ]),
        ]),
      ]),
      list([
        'remove',
        'isolates',
        list([
          list([
            1,
            dict({
              'default': False,
              'id': '3cbb22cc',
              'sequences': list([
              ]),
              'source_name': 'b',
              'source_type': 'isolate',
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          3,
          4,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.4',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.remove_isolate: 'remove_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Blueberry bunchy top virus',
      'version': 4,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestDeleteIsolate.test_default[True][otu]
  dict({
    'abbreviation': 'BBTV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': '3cbb22cc',
        'sequences': list([
        ]),
        'source_name': 'b',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        '3cbb22cc',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Removed Isolate This and set Isolate b as default',
      'id': 'bf1b993c.4',
      'method_name': <HistoryMethod.remove_isolate: 'remove_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Blueberry bunchy top virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-M',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 4,
  })
# ---
# name: TestDeleteIsolate.test_ok[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Removed Isolate This',
    'diff': list([
      list([
        'change',
        'verified',
        list([
          True,
          False,
        ]),
      ]),
      list([
        'remove',
        'isolates',
        list([
          list([
            0,
            dict({
              'default': True,
              'id': 'fb085f7f',
              'sequences': list([
                dict({
                  '_id': '7cf872dc',
                  'accession': 'QH302258',
                  'definition': 'Tv program actually race tonight themselves true power.',
                  'host': 'garlic',
                  'isolate_id': 'fb085f7f',
                  'otu_id': 'bf1b993c',
                  'reference': dict({
                    'id': 'hxn167',
                  }),
                  'segment': 'RNA-M',
                  'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
                  'target': None,
                }),
                dict({
                  '_id': '3cbb22cc',
                  'accession': 'OR596737.1',
                  'definition': 'Prunus virus F isolate PCEG segment RNA2',
                  'host': 'Prunus cerasus',
                  'isolate_id': 'fb085f7f',
                  'otu_id': 'bf1b993c',
                  'reference': dict({
                    'id': 'hxn167',
                  }),
                  'segment': 2,
                  'sequence': 'TAAGAGATTAAACAACCGCTTTCGTTACCAGAAACTGCTTTCTTTGAACGTTTCTGTTTGCTT',
                  'target': None,
                }),
              ]),
              'source_name': 'This',
              'source_type': 'isolate',
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          3,
          4,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.4',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.remove_isolate: 'remove_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Blueberry bunchy top virus',
      'version': 4,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestDeleteSequence.test_ok[history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Removed sequence 7cf872dc from Isolate This',
    'diff': list([
      list([
        'change',
        'verified',
        list([
          True,
          False,
        ]),
      ]),
      list([
        'remove',
        list([
          'isolates',
          0,
          'sequences',
        ]),
        list([
          list([
            0,
            dict({
              '_id': '7cf872dc',
              'accession': 'QH302258',
              'definition': 'Tv program actually race tonight themselves true power.',
              'host': 'garlic',
              'isolate_id': 'fb085f7f',
              'otu_id': 'bf1b993c',
              'reference': dict({
                'id': 'hxn167',
              }),
              'segment': 'RNA-M',
              'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
              'target': None,
            }),
          ]),
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          2,
          3,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.3',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.remove_sequence: 'remove_sequence'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Blueberry bunchy top virus',
      'version': 3,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data0-TMV-Changed name to Tobacco mosaic otu][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to PVF and modified schema',
    'diff': list([
      list([
        'change',
        'lower_name',
        list([
          'prunus virus f',
          'tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'name',
        list([
          'Prunus virus F',
          'Tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data0-TMV-Changed name to Tobacco mosaic otu][json]
  dict({
    'abbreviation': 'PVF',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data0-TMV-Changed name to Tobacco mosaic otu][otu]
  dict({
    'abbreviation': 'PVF',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data1-PVF-Changed name to Tobacco mosaic otu and changed abbreviation to TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'lower_name',
        list([
          'prunus virus f',
          'tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'name',
        list([
          'Prunus virus F',
          'Tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data1-PVF-Changed name to Tobacco mosaic otu and changed abbreviation to TMV][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data1-PVF-Changed name to Tobacco mosaic otu and changed abbreviation to TMV][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data2-PVF-Changed abbreviation to TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data2-PVF-Changed abbreviation to TMV][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data2-PVF-Changed abbreviation to TMV][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data3-TMV-Changed name to Tobacco mosaic otu][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'lower_name',
        list([
          'prunus virus f',
          'tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'name',
        list([
          'Prunus virus F',
          'Tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data3-TMV-Changed name to Tobacco mosaic otu][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data3-TMV-Changed name to Tobacco mosaic otu][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data4-TMV-Changed name to Tobacco mosaic otu and removed abbreviation TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic otu and removed abbreviation PVF and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          '',
        ]),
      ]),
      list([
        'change',
        'lower_name',
        list([
          'prunus virus f',
          'tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'name',
        list([
          'Prunus virus F',
          'Tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data4-TMV-Changed name to Tobacco mosaic otu and removed abbreviation TMV][json]
  dict({
    'abbreviation': '',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Tobacco mosaic otu and removed abbreviation PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data4-TMV-Changed name to Tobacco mosaic otu and removed abbreviation TMV][otu]
  dict({
    'abbreviation': '',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic otu and removed abbreviation PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data5--Changed name to Tobacco mosaic otu and added abbreviation TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'lower_name',
        list([
          'prunus virus f',
          'tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'name',
        list([
          'Prunus virus F',
          'Tobacco mosaic otu',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data5--Changed name to Tobacco mosaic otu and added abbreviation TMV][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data5--Changed name to Tobacco mosaic otu and added abbreviation TMV][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Tobacco mosaic otu and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Tobacco mosaic otu',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data6-PVF-Changed abbreviation to TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data6-PVF-Changed abbreviation to TMV][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data6-PVF-Changed abbreviation to TMV][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data7--Added abbreviation TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          'TMV',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data7--Added abbreviation TMV][json]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data7--Added abbreviation TMV][otu]
  dict({
    'abbreviation': 'TMV',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Prunus virus F and changed abbreviation to TMV and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data8-TMV-Removed abbreviation TMV][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Changed name to Prunus virus F and removed abbreviation PVF and modified schema',
    'diff': list([
      list([
        'change',
        'abbreviation',
        list([
          'PVF',
          '',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          0,
          1,
        ]),
      ]),
    ]),
    'id': '6116cba1.1',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit: 'edit'>,
    'otu': dict({
      'id': '6116cba1',
      'name': 'Prunus virus F',
      'version': 1,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestEdit.test[True-data8-TMV-Removed abbreviation TMV][json]
  dict({
    'abbreviation': '',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Changed name to Prunus virus F and removed abbreviation PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': 'edit',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test[True-data8-TMV-Removed abbreviation TMV][otu]
  dict({
    'abbreviation': '',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': dict({
      'empty_isolate': list([
        'cab8b360',
      ]),
      'empty_otu': False,
      'empty_sequence': False,
      'isolate_inconsistency': False,
    }),
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Changed name to Prunus virus F and removed abbreviation PVF and modified schema',
      'id': '6116cba1.1',
      'method_name': <HistoryMethod.edit: 'edit'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Prunus virus F',
    'otu_schema': list([
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': False,
    'version': 1,
  })
# ---
# name: TestEdit.test_no_change[True-0-data0][json]
  dict({
    'abbreviation': 'PVF',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
          dict({
            'accession': 'KX269872',
            'definition': 'Prunus virus F isolate 8816-s2 segment RNA2 polyprotein 2 gene, complete cds.',
            'host': 'sweet cherry',
            'id': 'abcd1234',
            'remote': None,
            'segment': None,
            'sequence': 'TGTTTAAGAGATTAAACAACCGCTTTC',
            'target': None,
          }),
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Edited Prunus virus E',
      'id': '6116cba1.0',
      'method_name': 'edit',
      'user': dict({
        'handle': 'laura56',
        'id': 2,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 0,
  })
# ---
# name: TestEdit.test_no_change[True-0-data1][json]
  dict({
    'abbreviation': 'PVF',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
          dict({
            'accession': 'KX269872',
            'definition': 'Prunus virus F isolate 8816-s2 segment RNA2 polyprotein 2 gene, complete cds.',
            'host': 'sweet cherry',
            'id': 'abcd1234',
            'remote': None,
            'segment': None,
            'sequence': 'TGTTTAAGAGATTAAACAACCGCTTTC',
            'target': None,
          }),
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Edited Prunus virus E',
      'id': '6116cba1.0',
      'method_name': 'edit',
      'user': dict({
        'handle': 'laura56',
        'id': 2,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': False,
    'version': 0,
  })
# ---
# name: TestEdit.test_no_change[True-1-data2][json]
  dict({
    'abbreviation': 'PVF2',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
          dict({
            'accession': 'KX269872',
            'definition': 'Prunus virus F isolate 8816-s2 segment RNA2 polyprotein 2 gene, complete cds.',
            'host': 'sweet cherry',
            'id': 'abcd1234',
            'remote': None,
            'segment': None,
            'sequence': 'TGTTTAAGAGATTAAACAACCGCTTTC',
            'target': None,
          }),
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Edited Prunus virus E',
      'id': '6116cba1.0',
      'method_name': 'edit',
      'user': dict({
        'handle': 'laura56',
        'id': 2,
      }),
    }),
    'name': 'Prunus virus F',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': True,
    'version': 1,
  })
# ---
# name: TestEdit.test_no_change[True-1-data3][json]
  dict({
    'abbreviation': 'PVF',
    'id': '6116cba1',
    'isolates': list([
      dict({
        'default': True,
        'id': 'cab8b360',
        'sequences': list([
          dict({
            'accession': 'KX269872',
            'definition': 'Prunus virus F isolate 8816-s2 segment RNA2 polyprotein 2 gene, complete cds.',
            'host': 'sweet cherry',
            'id': 'abcd1234',
            'remote': None,
            'segment': None,
            'sequence': 'TGTTTAAGAGATTAAACAACCGCTTTC',
            'target': None,
          }),
        ]),
        'source_name': '8816-v2',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': 0,
    'most_recent_change': dict({
      'created_at': '2015-10-06T20:00:00Z',
      'description': 'Edited Prunus virus E',
      'id': '6116cba1.0',
      'method_name': 'edit',
      'user': dict({
        'handle': 'laura56',
        'id': 2,
      }),
    }),
    'name': 'Prunus virus G',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
    ]),
    'verified': True,
    'version': 1,
  })
# ---
# name: TestGet.test_ok
  dict({
    'abbreviation': 'BBTV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
          dict({
            'accession': 'QH302258',
            'definition': 'Tv program actually race tonight themselves true power.',
            'host': 'garlic',
            'id': '7cf872dc',
            'remote': None,
            'segment': 'RNA-M',
            'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
            'target': None,
          }),
        ]),
        'source_name': 'This',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': 'approximately_now_isoformat',
      'description': 'Created new sequence QH302258 in Isolate This',
      'id': 'bf1b993c.2',
      'method_name': 'create_sequence',
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Blueberry bunchy top virus',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'schema': list([
      dict({
        'molecule': 'ssRNA',
        'name': 'RNA-M',
        'required': True,
      }),
    ]),
    'verified': True,
    'version': 2,
  })
# ---
# name: TestGetSequence.test_ok
  dict({
    'accession': 'QH302258',
    'definition': 'Tv program actually race tonight themselves true power.',
    'host': 'garlic',
    'id': '7cf872dc',
    'otu_id': 'bf1b993c',
    'reference': dict({
      'data_type': 'genome',
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'segment': 'RNA-M',
    'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
    'target': None,
  })
# ---
# name: TestListIsolates.test_ok[json]
  list([
    dict({
      'default': True,
      'id': 'cab8b360',
      'sequences': list([
      ]),
      'source_name': '8816-v2',
      'source_type': 'isolate',
    }),
    dict({
      'default': False,
      'id': 'bcb9b352',
      'sequences': list([
      ]),
      'source_name': '7865',
      'source_type': 'isolate',
    }),
  ])
# ---
# name: TestListSequences.test_ok
  list([
    dict({
      'accession': 'QH302258',
      'definition': 'Tv program actually race tonight themselves true power.',
      'host': 'garlic',
      'id': '7cf872dc',
      'remote': None,
      'segment': 'RNA-M',
      'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
      'target': None,
    }),
  ])
# ---
# name: TestSetAsDefault.test[history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Set Isolate b as default',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'default',
        ]),
        list([
          True,
          False,
        ]),
      ]),
      list([
        'change',
        list([
          'isolates',
          1,
          'default',
        ]),
        list([
          False,
          True,
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          5,
          6,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.6',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.set_as_default: 'set_as_default'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Faba bean tatter leaf virus',
      'version': 6,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestSetAsDefault.test[json]
  dict({
    'default': True,
    'id': '09d01419',
    'sequences': list([
    ]),
    'source_name': 'b',
    'source_type': 'isolate',
  })
# ---
# name: TestSetAsDefault.test_no_change[json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
      dict({
        '_id': '7cf872dc',
        'accession': 'RH201868',
        'definition': 'Support time operation wear often.',
        'host': 'blueberry',
        'isolate_id': 'fb085f7f',
        'otu_id': 'bf1b993c',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA-A',
        'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
        'target': None,
      }),
      dict({
        '_id': '3cbb22cc',
        'accession': 'FJ862591',
        'definition': 'Spend cut end red.',
        'host': 'apple',
        'isolate_id': 'fb085f7f',
        'otu_id': 'bf1b993c',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA 1',
        'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
        'target': None,
      }),
      dict({
        '_id': 'da42dca3',
        'accession': 'AY525198',
        'definition': 'Edge bit avoid yourself.',
        'host': 'tomato',
        'isolate_id': 'fb085f7f',
        'otu_id': 'bf1b993c',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'RNA-2',
        'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
        'target': None,
      }),
    ]),
    'source_name': 'Behind',
    'source_type': 'isolate',
  })
# ---
# name: TestUpdateIsolate.test_force_case
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
      dict({
        'accession': 'RH201868',
        'definition': 'Support time operation wear often.',
        'host': 'blueberry',
        'id': '7cf872dc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA-A',
        'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
        'target': None,
      }),
      dict({
        'accession': 'FJ862591',
        'definition': 'Spend cut end red.',
        'host': 'apple',
        'id': '3cbb22cc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA 1',
        'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
        'target': None,
      }),
      dict({
        'accession': 'AY525198',
        'definition': 'Edge bit avoid yourself.',
        'host': 'tomato',
        'id': 'da42dca3',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'RNA-2',
        'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
        'target': None,
      }),
    ]),
    'source_name': 'Behind',
    'source_type': 'variant',
  })
# ---
# name: TestUpdateIsolate.test_ok[both][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Renamed Isolate Behind to Variant A',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'source_type',
        ]),
        list([
          'isolate',
          'variant',
        ]),
      ]),
      list([
        'change',
        list([
          'isolates',
          0,
          'source_name',
        ]),
        list([
          'Behind',
          'A',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          4,
          5,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.5',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Faba bean tatter leaf virus',
      'version': 5,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestUpdateIsolate.test_ok[both][json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
      dict({
        'accession': 'RH201868',
        'definition': 'Support time operation wear often.',
        'host': 'blueberry',
        'id': '7cf872dc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA-A',
        'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
        'target': None,
      }),
      dict({
        'accession': 'FJ862591',
        'definition': 'Spend cut end red.',
        'host': 'apple',
        'id': '3cbb22cc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA 1',
        'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
        'target': None,
      }),
      dict({
        'accession': 'AY525198',
        'definition': 'Edge bit avoid yourself.',
        'host': 'tomato',
        'id': 'da42dca3',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'RNA-2',
        'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
        'target': None,
      }),
    ]),
    'source_name': 'A',
    'source_type': 'variant',
  })
# ---
# name: TestUpdateIsolate.test_ok[both][otu]
  dict({
    'abbreviation': 'FBTLV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
          dict({
            'accession': 'RH201868',
            'definition': 'Support time operation wear often.',
            'host': 'blueberry',
            'id': '7cf872dc',
            'remote': None,
            'segment': 'DNA-A',
            'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
            'target': None,
          }),
          dict({
            'accession': 'FJ862591',
            'definition': 'Spend cut end red.',
            'host': 'apple',
            'id': '3cbb22cc',
            'remote': None,
            'segment': 'DNA 1',
            'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
            'target': None,
          }),
          dict({
            'accession': 'AY525198',
            'definition': 'Edge bit avoid yourself.',
            'host': 'tomato',
            'id': 'da42dca3',
            'remote': None,
            'segment': 'RNA-2',
            'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
            'target': None,
          }),
        ]),
        'source_name': 'A',
        'source_type': 'variant',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Renamed Isolate Behind to Variant A',
      'id': 'bf1b993c.5',
      'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Faba bean tatter leaf virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA-A',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA 1',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-2',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': True,
    'version': 5,
  })
# ---
# name: TestUpdateIsolate.test_ok[source_name][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Renamed Isolate Behind to Isolate A',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'source_name',
        ]),
        list([
          'Behind',
          'A',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          4,
          5,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.5',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Faba bean tatter leaf virus',
      'version': 5,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestUpdateIsolate.test_ok[source_name][json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
      dict({
        'accession': 'RH201868',
        'definition': 'Support time operation wear often.',
        'host': 'blueberry',
        'id': '7cf872dc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA-A',
        'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
        'target': None,
      }),
      dict({
        'accession': 'FJ862591',
        'definition': 'Spend cut end red.',
        'host': 'apple',
        'id': '3cbb22cc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA 1',
        'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
        'target': None,
      }),
      dict({
        'accession': 'AY525198',
        'definition': 'Edge bit avoid yourself.',
        'host': 'tomato',
        'id': 'da42dca3',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'RNA-2',
        'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
        'target': None,
      }),
    ]),
    'source_name': 'A',
    'source_type': 'isolate',
  })
# ---
# name: TestUpdateIsolate.test_ok[source_name][otu]
  dict({
    'abbreviation': 'FBTLV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
          dict({
            'accession': 'RH201868',
            'definition': 'Support time operation wear often.',
            'host': 'blueberry',
            'id': '7cf872dc',
            'remote': None,
            'segment': 'DNA-A',
            'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
            'target': None,
          }),
          dict({
            'accession': 'FJ862591',
            'definition': 'Spend cut end red.',
            'host': 'apple',
            'id': '3cbb22cc',
            'remote': None,
            'segment': 'DNA 1',
            'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
            'target': None,
          }),
          dict({
            'accession': 'AY525198',
            'definition': 'Edge bit avoid yourself.',
            'host': 'tomato',
            'id': 'da42dca3',
            'remote': None,
            'segment': 'RNA-2',
            'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
            'target': None,
          }),
        ]),
        'source_name': 'A',
        'source_type': 'isolate',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Renamed Isolate Behind to Isolate A',
      'id': 'bf1b993c.5',
      'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Faba bean tatter leaf virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA-A',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA 1',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-2',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': True,
    'version': 5,
  })
# ---
# name: TestUpdateIsolate.test_ok[source_type][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Renamed Isolate Behind to Variant Behind',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'source_type',
        ]),
        list([
          'isolate',
          'variant',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          4,
          5,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.5',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Faba bean tatter leaf virus',
      'version': 5,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestUpdateIsolate.test_ok[source_type][json]
  dict({
    'default': True,
    'id': 'fb085f7f',
    'sequences': list([
      dict({
        'accession': 'RH201868',
        'definition': 'Support time operation wear often.',
        'host': 'blueberry',
        'id': '7cf872dc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA-A',
        'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
        'target': None,
      }),
      dict({
        'accession': 'FJ862591',
        'definition': 'Spend cut end red.',
        'host': 'apple',
        'id': '3cbb22cc',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'DNA 1',
        'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
        'target': None,
      }),
      dict({
        'accession': 'AY525198',
        'definition': 'Edge bit avoid yourself.',
        'host': 'tomato',
        'id': 'da42dca3',
        'reference': dict({
          'id': 'hxn167',
        }),
        'segment': 'RNA-2',
        'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
        'target': None,
      }),
    ]),
    'source_name': 'Behind',
    'source_type': 'variant',
  })
# ---
# name: TestUpdateIsolate.test_ok[source_type][otu]
  dict({
    'abbreviation': 'FBTLV',
    'id': 'bf1b993c',
    'isolates': list([
      dict({
        'default': True,
        'id': 'fb085f7f',
        'sequences': list([
          dict({
            'accession': 'RH201868',
            'definition': 'Support time operation wear often.',
            'host': 'blueberry',
            'id': '7cf872dc',
            'remote': None,
            'segment': 'DNA-A',
            'sequence': 'CCGVTTACTAATGTATAGGAGCSCAAAGAAGACADGCGAGCCGAATTACCGTTRCRCGAGGAACAKCAGRGKCTCAGCAGCAGCCCCGGATGGACGAATGCGAGCGGAAGTGRCAATGAGHTCBHGAAWTAAGHGCACATGACKCAYGATCGCAAGAATTTCGGBCCCCTGATTATTTAGATACTVAAGMTGGTGTACCTGGAACATGAACGNAGAATACTKGGAAANCAAAGGACGACTCNGCACTGACCCCTCGGGNCGCMAGGTTCGCATTGCGCYAATGTGGGCTTCAAGCCATGTRTHGDCTGAGGTCTCTGGTTAMTGTSCAGCAGGTACCAGACATGCAGGAAGCMCDGTGBTTGBVAGNATTATCBRATACCGTGGCCCCWAGTAAATABGTTCGTTTAGTAGTTCAACGRGTGMTACCGTAATBTGCTCACTTAAACTATCGCTGATTKCTTTCCCTABRTTWAAAACAGMATABTCTCAGTGTCAAHTCTGACBCTCATCATGGTGTGCAAATCAGGGAGTACAABCGRTTCAAATCCTCGACCCBTACGATTNGHGAWKTTAATCTRACATGTTCGAMATAATVTCGGTAGRACGTGGTTAGGGGTAGCCCGTCTCTAATTAATACCAACCATCGTCAAGTGTGTCTCGTTCACTYTCTATGAGACGCGTBTAGTTNARCGGGCCCTACGATAGNACTATTDCTGCTGRATTTCCAACTCGGAANAAYCGDTATTCACKCACCTBCAGGGCGAATATTSATGTGCCTTAACACTCATAWTGTCAKTATCGGTAGCGHGGCAWACCCGGATGAWBGGGCGTGACGCATGTCGCTCCCAGTGSACTCACCMATATATNTGGMNGGCTGTAVGSTCCGAGAGGCAATTTCTTAGCTTAGYCCTCASTGCACCSCCTTTAGGTTCTTGTAACGGGTCAYCGGRTHAATGAGCTAGTCTGGGGAATATTTTGTTTCGATTCCGGCTCCTGTKAAGTAGCCTGBATANCTAAGCAGY',
            'target': None,
          }),
          dict({
            'accession': 'FJ862591',
            'definition': 'Spend cut end red.',
            'host': 'apple',
            'id': '3cbb22cc',
            'remote': None,
            'segment': 'DNA 1',
            'sequence': 'GCCYGTACACGTWAGCGCGYAGAACAGACCTTTGCAKAATCACGGYCGAKMTTCCTTGCACTWAAAATGGTGGGCGCTGKACGATADACGBATSGAGAGSMTABCTTCTDTATTCTGACGGAAATAAKCAAGGTCGGKTATACTAGTTYTCKATTCCCGGTCGTCCGATGGHTACCACAKGGATATCCAGTGTTACATTAAATACCCGATGAAAAACRCTGGGYGGTACDCATGCTYTTCTTTAHACCHGAGGCCCTGAAAATGTGTGCGTACGGCGACANTCTGTCKATATGCTTGACTCCTTTTTCYCBCCTACGTTACACCAATGCGACTGGGTCVTATBKATTGDGATAGCGTCGATGTGCTTHGGTARAAMGMTTGHCCMNGATTTCACTWGTAGTTGAAGAWACAGCYACGCCTCKTTCAAHABATTTCACTAAAAGAAHTTCCGCCTACATACGGCTGTTGCBGATCATTCMAGGAMCAATTCARTACAAWGTGGATCCGCAGCCMCACCTGAATGCCADCKCTGCATGGTVTNAAAASWGATATATCGCCBCCRTCACGGACTAAGCGCBTCATGHTGMTCMATCCBCTTGACMAAAGTCTATCCGCACAR',
            'target': None,
          }),
          dict({
            'accession': 'AY525198',
            'definition': 'Edge bit avoid yourself.',
            'host': 'tomato',
            'id': 'da42dca3',
            'remote': None,
            'segment': 'RNA-2',
            'sequence': 'CCGTCGNGBTCGTTHTNGAGVTCGAGTGWACTAGHCTTTCTAHNATTGAGCTGCTCHAGGGACGTCTTGCTATCTGTTTGRBAGCATTTCSAGGTTATACTATGTGSTCGCATVTGGGGGGAACACCAAAGABVGCTTTTGGATAAGCATCGGACCAACTDCGACGGATCTCTGYTCTCGCGGGAACCGCRGCGCTTCCAGDCAAATGAGSAADTGAVACMGTGTCTTCGGGACTAKAAACCCCSGRAGACMCTTYKCGTAHCTHCTGAGAATGCTAKGGGGAGGGCGAGTGCCCAAAGAATHGTGATCVATKACTCGTGBVAGGASAABGCTTTACAGAATGGCSATGTACATTTCCATTT',
            'target': None,
          }),
        ]),
        'source_name': 'Behind',
        'source_type': 'variant',
      }),
    ]),
    'issues': None,
    'last_indexed_version': None,
    'most_recent_change': dict({
      'created_at': datetime.datetime(2015, 10, 6, 20, 0),
      'description': 'Renamed Isolate Behind to Variant Behind',
      'id': 'bf1b993c.5',
      'method_name': <HistoryMethod.edit_isolate: 'edit_isolate'>,
      'user': dict({
        'handle': 'leeashley',
        'id': 1,
      }),
    }),
    'name': 'Faba bean tatter leaf virus',
    'otu_schema': list([
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA-A',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'DNA 1',
        'required': True,
      }),
      dict({
        'molecule': <Molecule.ss_rna: 'ssRNA'>,
        'name': 'RNA-2',
        'required': True,
      }),
    ]),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'verified': True,
    'version': 5,
  })
# ---
# name: TestUpdateSequence.test_ok[True][history]
  dict({
    'created_at': datetime.datetime(2015, 10, 6, 20, 0),
    'description': 'Edited sequence 7cf872dc in Isolate This',
    'diff': list([
      list([
        'change',
        list([
          'isolates',
          0,
          'sequences',
          0,
          'definition',
        ]),
        list([
          'Tv program actually race tonight themselves true power.',
          'A made up sequence',
        ]),
      ]),
      list([
        'change',
        list([
          'isolates',
          0,
          'sequences',
          0,
          'host',
        ]),
        list([
          'garlic',
          'Grapevine',
        ]),
      ]),
      list([
        'change',
        list([
          'isolates',
          0,
          'sequences',
          0,
          'sequence',
        ]),
        list([
          'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
          'ATGCGTGTACTG',
        ]),
      ]),
      list([
        'change',
        'version',
        list([
          2,
          3,
        ]),
      ]),
    ]),
    'id': 'bf1b993c.3',
    'index': dict({
      'id': 'unbuilt',
      'version': 'unbuilt',
    }),
    'method_name': <HistoryMethod.edit_sequence: 'edit_sequence'>,
    'otu': dict({
      'id': 'bf1b993c',
      'name': 'Blueberry bunchy top virus',
      'version': 3,
    }),
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'user': dict({
      'handle': 'leeashley',
      'id': 1,
    }),
  })
# ---
# name: TestUpdateSequence.test_ok[True][json]
  dict({
    'accession': 'QH302258',
    'definition': 'A made up sequence',
    'host': 'Grapevine',
    'id': '7cf872dc',
    'isolate_id': 'fb085f7f',
    'otu_id': 'bf1b993c',
    'reference': dict({
      'id': 'hxn167',
    }),
    'segment': 'RNA-M',
    'sequence': 'ATGCGTGTACTG',
    'target': None,
  })
# ---
# name: TestUpdateSequence.test_ok[True][sequence]
  dict({
    'accession': 'QH302258',
    'definition': 'A made up sequence',
    'host': 'Grapevine',
    'id': '7cf872dc',
    'otu_id': 'bf1b993c',
    'reference': dict({
      'data_type': <ReferenceDataType.genome: 'genome'>,
      'id': 'hxn167',
      'name': 'Reference A',
    }),
    'remote': None,
    'segment': 'RNA-M',
    'sequence': 'ATGCGTGTACTG',
    'target': None,
  })
# ---
# name: TestUpdateSequence.test_unset_segment[True][json]
  dict({
    'accession': 'QH302258',
    'definition': 'Tv program actually race tonight themselves true power.',
    'host': 'garlic',
    'id': '7cf872dc',
    'isolate_id': 'fb085f7f',
    'otu_id': 'bf1b993c',
    'reference': dict({
      'id': 'hxn167',
    }),
    'segment': None,
    'sequence': 'GTCAGTATTWTTTWCCGTTCAATTCTGCTTGTCATTACCCGGCTCGGGANCAGVTGTAGAGCAACGTHAGTATCGGACCTGTAAGCWSYAGGCGRCTCACAATGGTCAAVTTCTCTAACATTTAYCGHTCGTTGGKCTHCAAGAATCTCCGTTVTGTTAGGRCGATAAWAAATCAVVATGGCYTCCCACATBGGAATGGCGGAAGATAAGTAACDCRCCGGGVGRACCGCGTCGGCAACTAGSTTGACATGAATCGGCAVTCTACAACCACTTGCGCCCTAGCGAYGYGGGCGAGTGCGAAMCRSCCAAGGGGTTATCKMTAGGATGAKBGAATATAHGAGAACSAATACGAATBADTCTSBCANACAGWGTTGTTAAAAATCGATCATTWATTGTATCWGTCGGTTGTTCSACCCAAGCATGCCAGCGGTGTVAGATCCTATTGYCAGTTCTKATTCCCCTCTGGTTCAGTCACTCTCGTCATGACACGACAGGGCAACNGGGTGTACTATGTTGCAYTGTGTAASCATTAAACACCGCTGTCCCBBMMCCGATAAACAGGDTKCTAGGTCTAATACAACGTGTTGAMACGAGHCAAAGTKTATGGAACAGMTTCTCATTCCTTAGAGTTGCGCGACAGTGGCAGTCGTCTAGCTCAATHCAGGGCGAGGGTCCRAGCTCAACCCWCTGTCGGGTAAGBTTGCTCTTCGAACAATCAADTGATTATVGTTTCGGCAKTTAAGCGATGGTAGAGGAAMCCCACTGGAMAATATTGTTCTTRCHGCTGCGTCAGAGCGTGACTHDACTDKCGGTYRTGAGCWTCTGCVAAAAMWCWGGGACTWAACAACGCGTTTNGWCCVAGGGGACKCTWCTCGTACSGCCCGTGTSKATGCCG',
    'target': None,
  })
# ---
# name: test_get_isolate[None]
  dict({
    'default': True,
    'id': 'cab8b360',
    'sequences': list([
      dict({
        'accession': 'KX269872',
        'definition': 'Prunus virus F isolate 8816-s2 segment RNA2 polyprotein 2 gene, complete cds.',
        'host': 'sweet cherry',
        'id': 'abcd1234',
        'reference': dict({
          'id': 'ref',
        }),
        'remote': None,
        'segment': None,
        'sequence': 'TGTTTAAGAGATTAAACAACCGCTTTC',
      }),
    ]),
    'source_name': '8816-v2',
    'source_type': 'isolate',
  })
# ---
